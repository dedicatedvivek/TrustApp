%!PS-Adobe-3.0 EPSF-3.0
%%Title: (figure7.pdf)
%%Version: 1 6
%%Creator: Adobe Acrobat 7.0
%%CreationDate: 17:14:02 12/05/14
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%ADO_ContainsXMP: MainFirst
%%BoundingBox: 0 288 261 405
%%HiResBoundingBox: 0.0 288.0 261.0 405.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources:
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W1 vm op crd OS scsa T h ef bg ucr sf ef r b fa pr seps ttf hb EF t2 irt  0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: This application does not support) dup show
72 580 moveto (printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (As a workaround, try selecting Print As Image from) show
72 480 moveto (the Advanced Print dialog.) show
showpage
quit
}
if
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/masks [ 2#10000000
2#11000000
2#11100000
2#11110000
2#11111000
2#11111100
2#11111110
2#11111111 ] def
/addNBits
{
/numBits exch def
/byte exch def
OutBitOffset numBits add 8 gt
{
byte OutBitOffset 8 sub bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutByteIndex OutByteIndex 1 add def
/bitsDoneSoFar OutBitOffset def
/OutBitOffset numBits 8 OutBitOffset sub sub def
OutBitOffset 0 gt
{
byte bitsDoneSoFar bitshift
masks numBits bitsDoneSoFar sub get and
OutBuffer OutByteIndex 3 -1 roll put
} if
}
{
byte masks numBits 1 sub get and
OutBitOffset neg bitshift
OutBuffer OutByteIndex get or
OutBuffer OutByteIndex 3 -1 roll put
/OutBitOffset OutBitOffset numBits add def
OutBitOffset 8 eq
{
/OutBitOffset 0 def
/OutByteIndex OutByteIndex 1 add def
} if
} ifelse
} bind def
/DevNNFilter
{
/InBuffer Width NumComps mul BitsPerComponent mul 7 add 8 idiv string def
AllSource InBuffer readstring pop pop
/outlen Width NewNumComps mul BitsPerComponent mul 7 add 8 idiv def
/OutBuffer outlen string def
0 1 outlen 1 sub { OutBuffer exch 0 put } for
/InByteIndex 0 def
/InBitOffset 0 def
/OutByteIndex 0 def
/OutBitOffset 0 def
/KeepArray NumComps array def
0 1 NumComps 1 sub { KeepArray exch true put } for
DevNNones { KeepArray exch false put } forall
Width {
KeepArray
{
{
/bitsLeft BitsPerComponent def
{
bitsLeft 0 le { exit } if
/bitsToDo 8 InBitOffset sub dup bitsLeft gt { pop bitsLeft } if def
InBuffer InByteIndex get
InBitOffset bitshift
bitsToDo addNBits
/bitsLeft bitsLeft bitsToDo sub def
InBitOffset bitsToDo add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
} loop
}
{
InBitOffset BitsPerComponent add
dup 8 mod /InBitOffset exch def
8 idiv InByteIndex add /InByteIndex exch def
}
ifelse
}
forall
} repeat
OutBuffer
} bd
/pdf_image
{
20 dict copy
begin
/UnusedNones where { /UnusedNones get}{false} ifelse
{
/NumComps Decode length 2 div cvi def
/OrigDecode Decode def
/NumNones DevNNones length def
/NewNumComps NumComps NumNones sub def
/Decode NewNumComps 2 mul cvi array def
/devNNindx 0 def
/decIndx 0 def
/cmpIndx 0 def
NumComps {
cmpIndx DevNNones devNNindx get eq
{
/devNNindx devNNindx 1 add dup NumNones eq {pop 0} if def
}
{
Decode decIndx OrigDecode cmpIndx 2 mul get put
Decode decIndx 1 add OrigDecode cmpIndx 2 mul 1 add get put
/decIndx decIndx 2 add def
} ifelse
/cmpIndx cmpIndx 1 add def
} repeat
_Filters dup length 1 sub get /AllSource exch def
/DataSource { DevNNFilter } def
}
{ _Filters dup length 1 sub get /DataSource exch def }
ifelse
currentdict image
_Filters pdf_flushfilters
end
} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
miDict /InterleaveType get 3 eq
{ MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse }
if
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 3388 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="3.1-701">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/">
         <xap:CreateDate>2014-12-05T17:14:02+05:30</xap:CreateDate>
         <xap:ModifyDate>2014-12-05T17:14:02+05:30</xap:ModifyDate>
         <xap:MetadataDate>2014-12-05T17:14:02+05:30</xap:MetadataDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:3D0DA08D727CE411945AEDAC70007335</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:3D0DA08D727CE411945AEDAC70007335</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:d8e7c49f-f334-45ba-9343-163d1e091807</stRef:instanceID>
            <stRef:documentID>uuid:2a025e60-20f6-460d-9172-56b61340eeec</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/eps</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>

% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
0.0 288.0 261.0 117.0 rectclip
q
0.0 288.0 m
261.0 288.0 l
261.0 405.0 l
0.0 405.0 l
h
W
n
q
720.0 0.0 0.0 405.0 0.0 0.0 cm
q
n
0.0 0.0 1.0 1.0 re
[/DeviceRGB] cs 
<<
/ImageType 1
/Width 960
/Height 540
/ImageMatrix [960.0 0.0 0.0 -540.0 0.0 540.0] 
/BitsPerComponent 8
/Decode [0.0 1.0 0.0 1.0 0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup /DCTDecode filter dup 
] >>
pdf_image s4IA0!"_al8O`[\!<E1.!+5d,s53kg8k)BA!!**$!+5e7!!*&R!(-_f!<E6&!<N<(
!WiE)!WrT.!s8W-"p>&2"U>5:#6tG<#7(VD#m^eD#R:SA%13FM$k*OQ#71kN%1E^S
$k*REgAjSA!WiE*!s8`0!sT/>#7(_H$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ
$k*OQ$k*OQ$k*OQ$k*OQ$k*OQs1eUH#QbtJ^]OT]!!3`5!tbS6_uLkZ!!*6(!<E3%
!<<*"z!!*-'"9eu7#RLhGs24oF&-)b4!s8T-!sJi2"98E&I/sBO!!El;&g8tq"qsjB
#9n.%14bR]#U;[@_%fkqn0Bf!Ee4T)()If*)C6^X-n-W&2)[BQ3BBMq77Kd<8P2o\
<E<1'=^#<GAS,RgBkh^2F`qtRH$Y*rKnbA=M2II[Pa.Q$R$jD;USO``Vl6SpZEppG
[^WcW]#)A'`Q#s>ai`&\eCE.%f\,!;ioB+]k3(smlLFH:o_%qPq"add_uLk[!!<6&
!<E3%!<E3$z!!*-'"9eu7#RLhGs24oF&HDk5!X&W.":#)5"98H(G5qXF!tbY>+Ya06
5u@kqE>'NOJHurVOeK%r#pV6(n.fDQd0^X71uTbN(Dn#.-7:2j.Q'+C3&s#e6q'R8
84cEP<)lt#=BSg;A7]@cBPD4&FEMbNG^4UeK7nr5LPUeEP*;,qQC!u,R\HRQV5C/h
WN*81['d?O\@K2f_o0O6a2lBFdaQ^rf%8R-g>_/RjlYail0@j2o_%qPq"addg&MN`
!<<05!tbMt!<)hiMC8J!MYWn<XFJqo<nFuqDt(IK3t3NR,2Z,AAN+p_(NJ^aindfq
!A25k#ojBW[he(:\!`CP<KU^P>QZaJ._WIn$NC*dbK]am<>aQGrP(FC)o!]V6g9IY
j=?8prmUDm>3gA20C_`Bal,d-k4&>o[t^'c*EVSgP0#WSJBVO?0klW>[!=3?ANj!=
@u"\kd_BHKLRQ8:oUENm`u[7g#Dd5OV6.]IL0%Aj@r#W"p8H-f>Q'(IfBXlnO6r^c
\+5g#Ai>q1][H]3=7fP*I@BJrM*"qe/miWochlGL0)%Q*U:sFn(Q!WV4Wd'.f%qH/
WnDWD9XgKd[$sT)V>dM8f!cI)&N$f6Ca5AT0'tteTNQ-Ze>c%ZI7N7u<df20[MQDV
AbM%'H#F\Nl1^5Hgt94e-5d4I8J-%lBed]nOERr='/=]4rjRC=IjES2h1kQFrjmTM
[GK3\>*iosMI7,q70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!
70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!
70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!
70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!70"$!
70"$!70"$!70"$!70"$!70"$!70"(Hr*/r?rr<F&_98YQZg8WR/O*)'I'5InA\E]]
B&1Anq)`Yh2eN@44Z*oSnRMS!_&.PQY'`$d_nIJKoY2;.R=-C\M1)T&C('k0-@I(B
'!O3U(/VIq/^e'Y:EgXlrRs<I:B(<G@X-eIT+CRr#K$I"pc%-s>>5U^8\)1SrY4-i
l"r#LW@"HW4h[qC^^t*l5CTHi1D9&V$#VrRU8AN"\rN-W!9@C6qap+chY0U,3B<n3
ZMspcPeT&G[ct'fVsPB%!!N8jcc51ModqiVQ\PDsil(?jO,0qlkO9[1p+Y:Vg=Sa@
g0%Ze'S>LjPBet*dkhZmcDhc)bWPXY&,[$"qr(kjp=g[FhB272L`QWs#k1Xf,LYj*
d9\K[n!MtW/i>@0`%E]0`l%0)G%*h"[sV?<bq$S9("Dp4G>lu_>n]Z6QN$q]e1^5&
g=F-t,VL^sb2agfU+8#]&/51;!*@K1,l[jr\GQbfHsRET2P]eSl/Fp=rr@b"UKr,6
:V""r$"Wn/XDat>gbIKI]=WW'=_!UqMC0$;OJ=:hpEOrh]b\))WS67g92F*p-WsB#
;g+.`f<W"mqQlX\Du:9(`&F;!^(JD_h>@GC`4lS\[1,I>%7fB2`82JLRH7"LT$GRF
N@piE)oe[Y/FsG$9&_S8.+eEkrrCuLhCA<bn^g_0Kr;k+)oIuNctLeH@i'ipSonfd
/mY&QOa;aoh/h`5AH9'.#j"=jVcihdDuL)bnK5^+=8X4kZebVQjCdkPn?G)i@A3Lb
`m:sj!+`7;k2R!7H/E8hR'q:PT?H8t^M"_CIp'1BcKjIs_9G$lm0kdVke@PpT[^)@
L)N^!0"&<\FIb]D)JaWX%MZQRW$pNa%NWeE8QC`sT/S[:Njc@^mEocdGoehZq_"]M
7TEA]34iJP?M:tF?FRZFT25AKrKW/TrrCb'>k,7\iZ"@m,K+'R>t7/,F)_r6gs$57
d%4<a@W9^KfbVYs*CE:iBZ&FPo5@k.D;tQqLgF0\-N=&c4ui>Hm!8IEft:!@,PFja
o/$CH#kV;=g,EkEq"aNo]naf%pW:18])@.C#AVjg?##u;^)_"cS]dF=of[(U[ad5e
7V4Z+mV_Gj8a^57-(\hAjH8,`fpIqNH5mHSE)ESo`?f'&G1Gidh6)Z1'!^QMj")C<
E/^ULmmVXfIf2-MT5St\rX*N>2Y[[!>+UGNrm6,soNcB(]9^?2e*m3WV;#9X>X[["
L01$dn]6`lXGd0X#Ts^aXk3Icn).GP;D#&LnJ>B:=!AYP7JL0JSQeh'9`25$?<ZUA
>MR$S%$O%'`?H%-Al]'0mtZ9PVt`Wsp,Ys4@qVY&>$\daQ<%%JX;:Mk`h=W737J+"
<<5Fb!!!!9X-MpIi&ECL<c?DErE8;_j&s-KQ+^K'!(;#I?gq*-QKgrf^LtlRRb!eM
9qJ#7iO]9.LHd'$hY1-(mL\]=o'Tn?ABrjQNPcljli%6rY$YAS#+,3GHt.q1R0m+h
X_Q]/[*qo^0S\_*D-H(HTFHnL%CG[UDCH!q!]M,gG=R4g$[L(e?i5c#praW)1&IU=
Rf<BWnG`KLrrD[Y4q@SmiSE"uq4+I2cgAXI7sNJ4D05dX#CI0ZCG]tl[\n,IlCKq;
e,ha`B"$DRN06PRrr?b]^0+5X][&>oPZLh/4"X4q/c=;H/h>-aZBAQ?62poo-i6jB
!7:]A5Q:`BXO[=Nq4j_a)Gg()rrAbip4*)B_ca&?!:r]Zd9HVNWd.\DqYpQ;V>b'k
lS`>S!'bu(=T8A`cJ<5b*As=c0.t"RDhtuIe_?Lh[*a7YiFk(&=(@PVg,lDdk2@F\
84B!,GsVZF/?B5c1\%gNNf2p6rWmljrrC1kl"I5R_msM_p*dc?fn]M(B9)uA58:gq
Hk-+B4sYC)8c>PN.bndQ&+I$*Xk?-eiU7#b]X(gG9/LE,>nL24A,q<p,\I6$CTdZe
pu25Q7mlfrrr<0C%K?Fi*HGNV;#^Ok0Fs1np.r*r!<"h2=/=HgE@+hBTir&'"I!2l
r<M80(7&l3)(`oodD<]Ol#eNTp-p.tYK%1M3Zj:[!;I]+DuTeclGf+LYE.NN^Q27@
^M&*1pkJM"5$jl@rr<C>(Rcqqi)KOBC"?I9gMI)!Gup,;77,j?#*&:(YFPI&50*)s
i;B$8`Soj\YPF@]!5he8eGfO@4at`W!;L?;J,X,[rr@eQrMfesk^*3"rrDQ?CB";3
d8X(ErDo8'biSj);"?:8nc&TQ:]CEX2fu7u-njrsiJS!.Dn[0<)"GSp);hR4iuLq4
Z/4Q-(t4M9W>IMp'E14.hG_YshZ!R)/H5^faSn@&!7;2L62pq?G>\A?k'";(.Xn9h
jd1aJ1Ms)4J(r3>.o5pj7]g07'KW/YiUN(::)""XqC\i-MnM"1!tK1F\CI^ZQ3,al
o34L*-IVD%`1l)9^Yl9k9Gd66M>dg/GOU'91\RAGI61!Nj0[b2c)-W%hVZMep8@=1
UtT0sm#>=?o*QsR$6@g;57B<UT.NZlqT&U9Oo8'l[/U,X_>FS1mNf?n^*2^kcJ`?a
26V`5.FN=m'IW%3k47\1No&Im)/#CP&h)*_4"@3S]_G_2!!N]("nBXRG!6]2=2ti(
r\3k+WTJVe8C9P2VeR%BIU$_@Sm2iNdQZ=2h!G=RN)'GBq-L?(Hgpbppo346]a)Lp
*fo;T$NC*=g2u^[c9'3BNK1:kpnS=X[FJAiE68II$AX1<)<P#iZ41-#+g5#*nP*6U
BB]SIMt*/-D><_^S'MtuU[!/Je]#jl/[]F6;t3Xfcsj_oN@r.Mnj.,$,&.&WB5)4,
7gZ\`;#;t+!B6:IQLqB5CZ,MPDr\V%f>GoCGTU.B5A&LE+_WtqX]]0LD^,1uah!+N
(.[rW?1GP%AK@$.\fZ\++nu,dXSa%-pZ#V7oXS5O/Zm<tA`BVN@K8.kSU/a]]0K@m
Gu;eiNMVppmit"0bN.LJq6$^pSsuX#dp5`g&`KTu:,\k,9mkFCVn0:;qu!fa_o$u0
0C9:IGjiXrGQ.XYi7'Tu&F'%GT;N:$haKGbf@Q>#ma<\a&M+^%b1>N:=J_+P+ua/<
;=T^"4t_)@p,qk@KA`(bPN"tk.+.[hEd`9&9XNBR50Y"8l"7;\m8eS012^3DH3t`H
7,5($c5*%[a6c6j?,^r+i_P)noG5^uP>%%QHFAq3MQ+^J?6*YA>*f>)SD.:oHaif+
mF^64KDtoT9DF5"cSth::YG26^@SW'5PS<O1pGRi@m4PZ^U9Cuo!=SOr1C?6`1-\,
WTIhl%p+n1elK5FdsG9Q>4;;[h`4Vfo;jLVXRPdupX7O@g\G(?^.[U(gA]9FZq]Yj
]74hj2V-2\LJhoI%R9@H]=f]^.3L%rDh2buE#0'P+gmIY5#djlURH?pqV'$7eo7+D
M/EYRRNl:_)]XPW!_.KH$Mi.:rr@Y^rm$snS,K\`2bs-pZQ;p?/3Q&g^u*i`cL8(=
!,TPgp8sj1Sjr_[0?fK+h_@'<+]0T[CU`DDl##.pbt<qo5"VW?^5l"Ep&.")MC>D7
;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!
;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!
;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!
;+20!;+5lIj$/@2rrDGKYNm*>KmZb$p`JIELG_`l"&[T*Bd:(;]OQG*F"N]OBb\jP
/tZPTZ!?%QLjY]VXs7X4k-]s#.IZcE@Ne2\ocAlP.hthj:YJfp*EVV/rr<37pjMW^
`OEPpZi8VPM=D*Pg%MTTpd,h$[4OUh7k/qq=X8mN:#?&@UAKAX^Y0;Z&:)P&*sM2L
m8*9@j,DH:B5/J0p`JIQ^QpBs)]3rgiqVOCk!q46:0UE!R=Ro+[2)r!BG+Z%n][-;
%6k-u!5TfW)131gAY+\HRpYran;>f9SRP;0`HN66W^?.%8IAU95B!i`4K[``,(V)r
#SI;d(%-Rh\FmW53?O9rp]KIsr__:BQ#R$>du'_P'dYK`>ebrprbpkFG!A(-<c)9@
TcZ,e^F$\^I*Xfkfh]FFrrA$0r)r%X-812s40l@haLkU7"ANN2[[gt#6X*2=Q*H0X
0.L1///HUFNa[Yo`)i^5)MdYcnHZs.M>Sn$5kp[De/c34,4XiM[%1Pu=H=c'MbAt#
SS-^l#A]*R.?GC7R3"D=nAh.CrrD8gr#Pe;_b[7]o0Zl+K^fS.iD.nk"l#7=Y)emP
KWeE]eLE"42^eEr:5Zp<^Lr&M1Vl.:a/JnMpmLiGn+2`An2L&Ygg_3#g&"j=\GlQT
^R+'^!6\_*pN:uE=angaoM7XSJ)Sf*J,,\>:7iWh1QOK(\!)ccaMHuG^<N:p0?pEi
*Bb.XC0#g*HjR.VGMnIaM>l%t,Q8GPNGQ!eZYd_N[=;thPI#Goo)+P54(R71@6D]i
n='8XrrAg+pr375K<GQ1o('D,nW$7%W@U_lDU7`oAA#Xfke?`hB6?Xg`hE8qC*!eN
>56.s5K<.!C2tts'r5.C]CA50$/eDKSHrsGW(R@:;p;QW]:(F7)a#53ebUZl$,7L1
nBLa?rrA=lgC>@Kk7oE)@;#Q6rrAGt",Q1Gr>#>4,L`Tp-.G.s^P'<;Qs9?d`k$B3
X[1R_O%o0*1O),^Sg2%B4&&R(kBI@=;)4i)RQ2':A8nc&_o)HRJ'i?449#;7St#`[
a/cWcr%-j($B]&q9n/Qa$"*KMgs9E'Z2=Xm'>shM(&T@lYP;=-dJQY2?gmkEV57M=
H"h?)g,I\9Crk@:=\]:@.0krM@_.ef='HLue$BB0U6pOi.%h(lrr@Y+rrC/kHuo;f
Z@/qV!9prO]dCDHrX'bI!%%a:ci2&[^]+;2gPYWlpc^;/4?Yo-qMXS'r![eO5K[D'
'N`DKdQp;9:]X!"c?rF_`Shnj3WqLINBC5"cNn6/(COplk-_2+Vq]BN.l`Al<`LbP
*J/p,&WSh-2GE9N7ETMi*?>mU5Oe/\J=lI<rXaS<AZ(%JlC-2qiqQsA*T-@Epl]QO
^.pl@rr<<?PC)=3m/6h.[/U,;6Z_s<phcUGcSNb.B(%>FjZ:oM*bi_Bk0?Jb@1p2Q
+8cFpRHkPgQN$s&?MJU@Kn#)3ph5%VrrC4,Ra^tfeGNUarXeOOT,E#^p3_:pbjaNf
,9LIPpG)W[-D0Jh_uB_W^RMQBml#*FIk:1r'I1j`d7aC1r64#9JkG=0?_^?ob3\cC
/'`Y'C]$d(!2FQ/^]+:dD[HFDo'3-\^\HpN#gLYMn:*^M/L*GXg\BgL&S]sO\E(;B
l#sY6"qh8nc#Ag]=TO@Y,K\&+M"8&.B8D>c8cDdHQ?RsRmSEi_!LNU&r>!3L!+GlS
J+QM8$@h$ZeGfOE5uZM8*W;XY>oC2F?MHPMp!EM%:/**6nVEPBI/a2SRuJrAc?B"J
B77L#mkqc&On)K2r14:af3]f\jG`2mi@XJ'^[SZ2!2UsU'=4l&n7V+(iP0tgmAYIY
2]i0F`r#N0",>Q'NphRpm<1rHYeSnQ.`_8;C&ET?Nt7L!hDRUWSN]4:!7>!F62pq>
]2AS.jo&>krJWj[Y/2g!c]>e"Ygk'"!+,tb1^sskdNcd?jM?=YIr^rRV7b!^EokI1
;R*,7DE,b&IQ&oN^XXQ])jt)R2#X!iK:;/V?frZJn-A@,n[IGXW1GZioKS=a)hf%>
2i$dpnFqha6rJjeO^).@B'M1pbo99s-C5E53LV@l0-.WP+8[tqh*2CaC(4'H%n5#$
1iF@9g)J:(_:nMd:=nhV6Q/TVfpr'BUfsSBLjn)ndojd8AVtafReYM6(i.'>oPm)6
rrDNj_Opb&WnRIQr"@K;=,s3+D`h$>nMeEjc@`)^Y$,R!^CbVP,_K'O,rGs:[_%FN
dW"Qs^L`-6Lp7O;C''GD&]WKr=/Mko9D)uro/P]F"aeQJKW.VORW8.+b$U.?,P99=
q/>1-m470<K0Cd6Hl)<S`-6YZd^At^m6!Jj]DHAJ8`'/R$CY;"QE`eo'XGltD(]:T
.&SV^Z79,fGLV);YBL/0UPkqK:j5_3Zh$C@`aJ)jC:Z9fRf9IAMC>X6Qme\d!%=S!
!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!
!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!
!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%=S!!%[&Ypa!n;FO(eR
_(U:NS%U%DYgk=6piiE6aYfp3:E!JBfL'Rs$"Y@g,+9r)Fm>#,W;rn"m>CmiJ)HTa
[`=Cm@^"JJiRP)h$m$_iGBotJqM)'0=d'Xu]U$]QQV*gF8F<79SBUKH)@>M!L:!-'
ip$Agiesd2.;s:Dc_rn3U8,;4mI_4Vhm7h"J+24d\'Zi^INNg?_d7aIBD.@WdE?+$
Bg-#tZ$idpiFBF+o/ruj5<:(]&U1,5+ciGNb"=9=dT/Oa;/pcBZO/+TOWd.-:]X!!
:]X!!:]X!!:^<3^9DsK,#(1+S[I8sbA+4!e5DqWoWHiu/eTIJil1ar(>9d8!baMY%
heZt^1/8Pu%KI5trr<P?rL(Fah0oNWi<?'-nV['E.n*KS7+nTB;(F([]_V!irX!N4
=ftlk=so4j+^rEVUj,DM>5*bnCJHn\2#TW3$V337?+d,&Hb6n$h3c7_!"QI4:&b2X
58_0)nT_hK!1%d"72=Dof,GF!)Uh9-H2dl451Y/8o.9nAn4hZlH(I/Pp42r$UhPY(
D(HM&&_luaKRLp1`TE@IeA2q/k$1V3c]-@E,F2frpiddgrr>P6n^md@!.6$k!6RA!
Ef09i:Re1lM4abMrrC98GPPbK!._9D4tZQ_rr<2ZprDo_iAZ\-"Y[n<!Y5`bX%9nM
*pWX]SFc&2A@R?O1.s_j`"p[Ajh=nhm:(mnP-?-m)"SgaIa:6eItp-`Ii!oPn-=c^
$ROT:p6RuLm%LoYRmn9a$/.TU?*9T3N2QlSFlTHbbDf9WEt@L='_*/=RGns^<cZXE
0DD))ORYeMPB3h>I#<+08Qe,]f<q5PeGR4qf=VXQh7rHErmlQ=4rO1Rna$2T$PUDr
(P7.DZ1n7@rNG2G?aY0)?Sfg]jnY&-gZBjOBt+%n/i>)24sTjSnY=&!1]IHq`gHLh
<f/MLb5VI<kuJRDZ#+H^qjWE9D;+mIB1Dbn]F+E4$(p^R9?`t7dP[)=e&K+5Z@"mf
Y5C5V6$,<Pj6:a8/t6uC+YqYmZ`L2AEQYRTJi`C:i\Ln<WT'eg?2jm>CEK<Z4Be]^
gjM1eqm2Jnp^EbO1X*Vmgj]dJkPkPArrE$=cPD$$b+uHF!.o.e*L9#LcOFW<41*"*
_oEfEeN@-8_Yp?lf2T;jJL1J>M3S4$Y9J].mMiIGrL\O#r&3?e*;G<IYDHFoQ9NWl
prc$Q)d1[7IIFOY)K@[?lt0j*.n9>t1l8qiCT>FfrM$r'nFIma#JknIIN3qTq^^sC
(7u\-2!`>YeSV&/T&W^&0NfDD]!/VKWhMcfY)o7\&@7%[?!0mI:/C@srr@WD\.1:8
Z)Z3OU>JNp?dDNdc2Rd!C];VOoK^+tJ)Lp8J+8E\rY'b%h[2OJpl9c4^qU;,*dB>>
\[H96YI#A]=m<CN^s%hd1m#_Y:paoT8\lgQ)$7!h*rVp!*<+=Bg->(WGlIc[?9/#*
o"O#]!!rS7CT78jbhqOX^-f?Rr`kq:@lkVI_62A%.^edRn>Rj_2UA>"7YA)4`Hn>3
MC>W;TI?Ol!%=S!!%=S!!%=S!!%=SSMtWP:\NUu3auaG;9s+Al`:l1,lGpe'<.Ac9
YE?K6*.luV@Y*TsUAIXH.qOfrH':+^.T<<!8o!h9MNo>[4O\ID+9)<ED"u=fq`=`W
_*'t+q!R9+f$lf.'pbhl9ktY?-&0#ITkrFOfgfG1OD7,-B1La9OYCJ1;IaXo>5i79
!8sPX[24f%!,R.:IOO^kN:bab0kmKZ?N+4X_H+/G!,f6lk'ItD=ll8b$_,-F,'gd8
@Yp%@&"\&aJ#/&$@t\fa_r5/5]j&,8ZsV:3j`C#7.E+cj+u=i!f(44f!*XlCJr1t[
X?L#?U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!
U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!
U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq!U5Aq$
q4.DMJ)o:s*Il_HVZ-Y\,ZXdtfCM$"0)kpnZ[=h6!3p$.rrCJ<X3]!R'R=tr_\9-$
4?IJ0Xm,\hEaS(Bk)neUB58Dko\+JfVKn**?aJSC\k`QuT-O/L]?lgZW?D-Gn9=j=
Vt&[&^Rl:NF.mtrYdiK0^*.0;2lYNPFoYS3:U=h\JQ3X#[?$b_An,ni(+SgR/'4#c
-#"m$/E%JI9jIW%n5oN(2rPgYp7M+Pr&+"SiU<,Bm(_7\(N!sb6T_dDrl('#!6WuK
c_'<:o*3J:?Y@kQ#C\g\)to*Wbkg57rr<s^:WHWrXj^CsJ)Td$hc$q;iDCVhBcqRr
+A!eeUuVbZN"KESp!%a%i7EV\,&2,Spk-GT)V8n:Ld7:FL7&4pW>Hq5#'D1>/B8bd
a4@etJu86br-to_j.9ULr%5+mqYSUrROdnQ_-\3H/po5I:])E/)h'>P5B#<MYO*oQ
Hr9%mh6Ubfe9AVr2`?&E07HChq\*nSr&XiXK"V#.pj(siYA&Iq^*d#eg5B(a8FCjY
WQa\8$bM>,^=dEMKiPV&%?7qTagjO15ne=_"$a*?rk@j>k*B4/n?i2q&,76'qOp?*
%H3rS0("A$M#qpoi.&\0f,&Yb=2S4-O/_ARjuY\pMn?SMhrNP(IB7d&EfK>eNSXAB
rX4AJ0)ko>JmEa&(/KT@BAMb8(VU%&FXc]3`%L<HfIlOJEp[l.>Wr7DD6=`m-\\S7
ceYec@.71JftXE!OnJA^i][GD!.pJbc[QTc4Vpl@r\f-WRp5CcYZk5nZhT^3f3"3q
@]LNM=N]rN*Q`I1D<-[f=8<^9!k%FGN1hZa-"ENcP]W(m;+23FKbRBL"Vag!"Vag!
"Vag!"Vag!"Vag!*$<2hfmhuDm3%j=GiQWo#Dhh*5q14S)llsWQ@gHp2pYoU\@Ai:
0uUqEGpAGX.+q]X.3<'!I_o9tJ:X3KGK$0opgp3>f1>FKe@mlh/uC"3brNM)qcE`&
!_%%,gVT!i5F0ujB)3j3;i7%*R_&+?oPch!2[(gM/QkHg]7&EuRI^?N0?9]<Ch)&q
+6Xd^FS%arHC'0T3-:-Tl:)`1ae\4Na)>er%FLJ9<oun\)i0biFb:n0p?_R&i7t5k
B(6,C=Wq^igeHhb%e%<HA63:0=i[OI`k$$Biso$l>u%]$;FqNn&t(99H7R:AP[S4.
0/'+#!'C/q52.a\5;f*uCT,`hC<u?PIKu.c>eTV('0"k+Pb)fF4=_Mj*Dli^n%Kf9
hA7q@3JM=MHVKfpLQ^>(ikL*-&\^[gPa59uR659^Bm<S77Ya1*i;Wf2leq6P$YrSE
2hn`PMbELOl>jKBfkmm>2[_B,&s\iYkdPS]mVVP@9HN*:T+9G%^m@"&ch1Xl8)ImL
-=thqUL"S1rAg5$[JUQ>kc]MQ^Yn#\#O-[^Z1.Inn>#!Vk.,gh5o&O5V)S)OjFSbO
A\HZt1s:V^&iS]#X=&C9"S30UO0.EfpapKtduf#&n6a0*C-k0r*\GsMm39`q_9U/=
Usp])GAP,Q.YW)1+=aDhElg&@QRnhCk1BF$AOehu<JRrZ40M0R?\.r?(&<pN:\ZD@
a,_-7Ho/8+D;\,Hr]__kGVmUGDc>*#9oUE"d`hs.P34SDP/,(jWjHgN-;PiUB>mZ'
57t:;^@<Simu$t4oMLDhQG^YIpi\NR'#@;VPP.XmCpP3<j"_04QR\r7d8(pcor04O
(]IcuSP8=3p`eVR^X)C6=?\G<d[q#!B:nPZpeUg;i3*64CjEd'rr@_)>d`$EgZ@en
4Kgp"Ia9c4gN/A?S7G^G^-DVtK$nlVbKYs]*Xqh!j-^t@QnN"!7Y.I-FE[nCj82-9
]Most4L!O7TjQjn]!Pu*56lQnnE7^8[/U-C5G2\Y(Y^kDrrCaG0j=DMF16>3)mQrY
SsteCD:bIS,f@O[DI8"mQG89m=#dB:KdcpRms9EfX*eIX!.ocLC&%3\W4jC,iI6D9
DZa\P'QppsRQ!Z,(4B*?&M[e'RQ2qYZB?:eLA;]";<+)uLFi?dp9qAaD#0.7hVVR/
m4HVWEqo5Y/gYOKRWfkjQ:>M.b:u-0g+1[N:))a39dIBd?N1!]cDa]a+#QOBoDZ,m
*)GrPrr=D/j8T,V(A/dJ-'H$ACAqOhBj^Zp59Kn*fXIgZ!9l&"rBjZ9j?LPKWUkDe
`udR@MC[OG5ba,a!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!
!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!
!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!!2>?!
!2>?!!3bO+p0I[uP@jT4rr?NJS,WJaO]V1q?\KT15O9PsJ&+4ZGrCNXOf2N4.(Hm/
i>mBicJj769!OQ;7r+pX9R$H$inr"i[#ReI0mX6<P"@d"_$:`:&sO&8%mMeH.7#qq
O"R/a/''h,U5C?!U5C?!U5C?#%9#p-f/1[?/)+_j/?^72/hQ7F8JL^!.`fbQ)+Z"a
GTbTSrr<J>nB_)jf7?0U6#$?!`p:72RZgr2Pa^9i4>Wejp^]cF8ascYrZq8#6aY\C
D'-Z%37]oL0$eSTIjWUljsVG/m*=>sDKf\QAgI#_%f![+6fF?/-3!t!r\OIZde*p@
2Y'M>GbT[#`6f27W41>Afkue[<;D@`aoEn2/%W/`'V;q"p"r][rr@f#rM)U@iOjC7
!/0fprrDjn>pk9>i2-GR[&:h?1.sTSHf33eXKn7Rmu2W6[hmF)!:l8ZbDeO`&DO]!
Kr!MmR0o0Xnd6jP3'X^_j?ob<rK[+%h1+DN+10Am"MP%hi<cOa!:oQ=pj5Nu1]IG@
07dL*6>F:5]<;R9VqFH5=56TUVu3U`8%S^#_qI=hTDAkA$NC+C'35&4jkY'N)?0\g
fR.)R1e92UT7oK=]NM4&]?\rC]N]aAkUs0ZY1jbt^1_\h#]k,@nqI';hHG<?741Ek
hCJHp'>r7F`I;0ZO/tS)q&^87k_&XDrr<OWhu<[*./s:&jEsZ$!2:"^:]*6IJ,H+G
PN\k9C-To:^[i8l."<W(rrC:>LW&*>>7ZZ2reWe8NUWk)[tOE'G542$mu)+36NsV0
(>WGc2D$iK"U6TRfN^Ye\''4rrZ9Ja9`G+>9AinN&=Tg&!&!TSW2?NB>=F$JUKDh8
BWobR\aI6%p5dp?rdnJY^[Qp,J,+:Yr&phKRK!8[Qb]g&+Z3X+?.Xd-:YA,2=56#K
:\e)IO'(qUr"O5GP5't/D`crjL#B/>n&P>L?4jTSqe#61naZRXg6QpLq)k8s)s#o=
AN!tH_e=MHTCd*Z49#;tGJa@[r2Hh3MPX&Um'!r6WRG3cIEVPJD]&CXpn@4:;i^kX
`?,us0C#!Z0ai6fe,3'-L8%e$//6k&rr?Q<G21;ha,-W8Ke?@;=-N08KSRM51-6!a
l[CYbJYg74\;O,PO,A'E&m3%*"[pINIlu+(Tiol9WZ3RMTn%:k>)K/Rg(q'jF?!(k
A`&5loM3%*rr@WY:]<:Yh%We.DfN<H]0,E>\,;6#%);.AQi@%ZqOMNT(WUIi)h&ZS
fZu5MRIrVsY;79ja4']ok^4o[k5PG"rr=;Y;+5Gr8/+oi!#/:!!-(61YPal^O8f4H
>L\/pQ:h.MX78^Z$#fhD"RY_<m=Xq5_OhB^CJAHYh[=fHX_E54Zdg\0Up[`&Fkrn4
)MO&_lS8u+`4U%^-0PdHYqV'jaRVt]VsSVTDG>nW3_dk&m.lUo]IHoR%e^5XU:kWj
$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!
$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!
$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$7MX!$IA6T
K_2GhpfCD@[G<W7f!J.ddT[/J:VXA3Rp5c8:o(>='7uB:kfg,e#[g1GK3Asc#NkLB
5Q:]d#-bGDnHXo"!r.Y$$WY_7"M9H)hBK]Hpcct=7#kAcA;\rB]fB&jQ8mC?Cm^A&
mGUVL97M_HBKq#S'0g!mC$tsPGR%=>AqP"YOFP,DPJaAEC0cuR?>7-)S*Y+8njFW^
MHS%UR2'6'"3-t[,o+[+$Vl$%biGmXV,LT$T?`1XW`n_WA[UojbSQRHOY$5#&4e((
Gh<4%<Z)=A&4%9IC3oiNps&g="IB"V5!/%RqNePYO2AJG\Z9HXC7:0niM;gX3nC3K
+a0-RDtMYj\t*AU0'OX_O!%M8/rIR/hhke1D_@:2FT2=MIPZ5h_fJIqboMRt1qR*.
BiZ!^E=bG\q\A]nLW`\dk4WsHYN?.%E@UM)!@@6IS28>8^)(k^b)6$+ig9QU&,)Fd
:ZkA^iD0]+:t+"cXY$$ZINhEJ<ouW6V<$3RRbM%N7`p@*;;^0AD^m6)PW[.Jrr<Wp
(jn^G06=*[j,\ln!#>DYF?!"?X*6d^0/)sW/ccfSVjg\l8bCC;6po'E\g\1!,\1G.
??otZa)l>t$!KF/bbD>S(%Ff358(]Zrr<>fLpSa`ls"qdrL89Of9*[gh>UV!\_>]^
?)Q,[CDNAo_5=SJ72/W2;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!;+20!
;+20"k?f7EjDF['rr?Ok^\VTmlZTMH4+G?+nB:gNH%5J4WRQAKpq,KL!:!-gY5"X,
g+D*bM388F8fMIc1.VlifFk!\%.q]79(T<mDK/6irE8t5$csq5Du$$dNeWFWa25PF
eb/gq-JRMJNbnA_2Vrf(\3*E]Ns<XC";/U(c>GMZZ*u;)F$h0AZC-*N"IhN]B4%K_
$3'u.C\ZfHUn71s*\$k/nAdfC/O%pm?<qf1I<SZ[OrJ>HWa=>u%DAs4&>55)V<&o-
8<V8UU.L)HLm#M)Q_'h;mEZk@0&5'->5h%9[7eGE-.@5`UJ7]Pg4biZVq^V1DQ`/)
+cCCF?-^@hQ66U-8HQXp^Ln)P,@Bg7ir8uul$=/(5A8f4M]OK3:\Obe!/3NiYLmMH
)NL:8rr>O%No&0Ze`"!l/\?j<;(4&`3V'!:/*d-7J02'Mm$IT$pd`4d&ptMST7gBb
]F:d6r'J',[aat#L:qc>N$c/Yo%_H#oD[&WDAt"i$@J=>H;q0gTCV\Vo[g4Idp&]_
<KB=he1LR-hu4PnI5UX]-3!sXO4\7.L[B.m@As)fphtK8):^KZHro<C[Eu8u(Wd>d
W*Na+k2'4o5:YgDcJm\]PlR.aQ/hfFrK9D'J\D<W0D7nlIPY>\_UI,jc-E$A43MtT
T*3kR56/`B-*kjBjIn!*GjQHlRt\;%`!LAU[%AAO%i:&j1j8DUKbmh>X=cA']+_5L
MjnKTGt^$L]R0B(;+dr0\H,RWW?@."X+-%V'Y@(*U@C0tV-PFuYA];50X.j6988m?
2oumk\1H84UN=8T<t1L)kkib/Hen[NK@e5:Ag8C(YIc/nHWbR[poQ[hL5KQMb]gMC
bm]Fc1FR?e@*7b(5m2-m*U37\[;?esRVM%7U5D;F.&)5!.&)5!.&)5!.&)5!.&)5!
.&)5!.&)5!.&)5!.&)5!.&)5!.&)5!.&)5!.&)5!.&)5!.&)5!.&)5!.&)5!.&)5!
.&)5!.&)5!.&)5!.&)5!.&)5!.&)5!.&)5!.&)5!.&)5!.&)5!.&)5!.&)5!.&)5!
.&)5!.&)5!.&)5!.&)5!.&)5!.&)5!.&)5!.&)5UEVSeXYDp;5pp$Q<CVsI=q``7_
pVJujLG+DVLk!ebqU3nIkJu>,j6b4M_=iAjqp(+)2M?QqRAKGOLi:Zadj4GEKR,;,
&mZNcA\2@Q?+mgcq_WMr)7T\%hp#j]^dSjU!h#n^*f>^\Xl&frrrC/jjKX'6BhMG*
!3`a/!6G-p?$,Rs)J`[qU!`iKrr?VE?8\&*l>(>59H"Vl5IPE9CcE6q-,?nb0a?\*
-Veq6%^CGL'J3WKVYILk\<k7i/=/O<nW[3n>-fOI6+eO\A=c:[G&f3acu]QR/F]&#
C8Jc<;:cDP[j\?tpRJ@t^R"D5o_34djkS1Kh,3aPT$g^5pTNkWf_D)V57mhpBn(lp
$bS9plQ-K0h;`?ucc(qmM)=J"4:c86l,@+5CM>AmF(t0>:Fo<J^U.XB376lC4R_tC
!8?m=puQ2Z>l61X\%C'ud:YBrQHa#!Ru>=Yhf"Tp=`%YnmDZnt86S##FRr1?+7FX?
MME;0nmCS3iDK73c*tXGm;7-^ofIQ4HqjUKrr<Lp9:mTJq^Uo][!0J`3oBXgpg<O&
inoK-Cb@@tgYHqg\lIA[,.Ec<UIes6"KOYJ7!:>R`0%<<#3:nM2i_5cJ&)`s!+k%.
C@U,X_Q-H=LuApDPJMRrV;Vdg0[+pb[F230TQuRa)4:nlWesoY+CD/4XX;Q)ZMp>C
L>D3]gNRQN"kR,VDqBHiH<Fp/+60R"2m_HA[B%>$Km[b-S)NM$Y_837dl^!9X@#+^
R$l10c*dMmYu7X--<PeW&K#,'Ild,Or#<VW>AE]3J\FA)gZ^$rAR?@#0&KpK1[],!
-Et&0,$9$T_DD\[\!&<H<):tH.gJD1hC+4hkrn$eaBos;_$^2BBO;*]n_<hO`Ergs
HXQ?",h+\3[4_g1%&K=.7BCHCJ^c)Ko7#&>QRh/M_"(ub_j#XcJ,/^7TDno\^"*,_
q+"etFB3;d9<j\rd!o^"57@.Fpa7HV6(r&f<[Zf1M"Ph%1Vdq9T+q'?ln<Oe?T-`C
FVlJ[^,I4(#\5DSpu?1`YQ"S4q>I5k!9i3#GQ.Ys2haKlDdU*j<;fFO+5-9^kKh,>
"b%qK4RiTpO5^\%?Q6((HTf,WK#>C8QG7=,PWJ3FdiuB0QR^-RPrn@YUMY-q>i5<C
I!>Sj7!nWXrrBr0ic"f^YNU:iT;Y]Vao9P]h>[I^,Pg<u!/)`?J+Q7GBFk"t^*`j[
j;R3/J)b<_K>1ss!/1'd`.&4\[!2J(rY(7qqnh7E>;l;LBE$88%mS7oS,BDC4NR8,
HKY,iU6EA[ULJL[5)l2YkPR1R_a!uG^'+H9_>U;3!$%d5)N3RHr=iT?J)L=TrrA'\
oZ'Brp3_4NrL"bi5F_ZQ!-m5PitpGL!9"!anK5]am-UE_rr@]o6,)kbp29ic?eR`N
ih+<`2EoGGDZ9\h9tAp/keH'_n_a9Wn(ImD!"CT<^\J)KU$=+n!ZbJoAX*&"Ilosb
K_Y$8M"g9;rr@e?`8CKF>@%L3T)LEk=4QB\]IWJ-j#3g66OC;d/Pj6m*Z'N>%'!E7
lT\jeG215&Um7c!Q3^J2QhgiZR_Vki`j4<(ht?P)$3("ah`nLJ!<!jlNrK+KVXUM`
!%mM,_LM&KrrCc.`nhiIdhgqrkCm+&Fu<&0GdBer9"!BL^O4a`ea:`>[po/VZ@)#.
[O15TpE#3qWDY<ZoQq[>TCCqag7S@lrr?^3!;nKmJ,W<s7Gn^O+SWp[(]CQ:&t^6C
,5?NYI@k*Mb-TTFAc8=7G5_DQp/fqU@<%>mbju<lY:OskXu'.[,pgpGJtTO5r6NVP
!.Vht(H5]:rr@`Hj6)6dG3o):r#ktTZ-[[mmka>Qg't'-^VR8!ni#K%hIbm?r>36k
n8G5@/IUrqn<\BXipXgX2eUf.[<u$O0D9QJDqY)E*hVT`b%L)_DVm!]ft'oX!-?Og
W7+s>)Fk<54%15Dp]LL$Z26.u#OQm;%et+arr?ifO8)Ht]()-?2X^SFO+6P2DSFB-
GL,@:o/9+RGF"_HbM];bp#$qFYJRae(W2jIpclP4-/I<_c_pPV7^gaIB"2A>BppF^
&YpiqC0Z^[)N<WDFqdu6-)*7g/J7fNqe:FerL\Nkpl",Xf8D4E/.:>?Gi_%@I_%_H
U"Ud$pK#XEI#g/5U*E1*!$JjdkEjK<E(VF2]c+pspf6hl_&bJcoG`:=B>f99,h$W^
ef.6bf"=J5/^=!MWS,7650STaD(`K"Y=*C^2EkEb%,P1&fikSr?OH,17(Rg8L3u42
@6N,ldT]MF6R4El9X64u'IlD37@$co7T`4>PITe8KD$;[.;duPF2Dqp+8B%^KtL3/
\u)a-081q]T;u7u#$["A4KgA?6Rn2cV1DHa`D%c7/QCQZ2S,c[Vt]c<CLl;R8ZSf>
Vff;Y]WC2Slaj[nD>X7%q`&hI8b`hU*tig/pq-6p]'uT3IfBBYY.RQj4_qp:@B"!%
2Bu+(jsd72dRkXiMC7')][;"*P(\tXjZGigT7nAnYO#Pjr#sQR-[sG!*4GkIKSrg9
LW#>2G^93giJ39oQ'LEf(0rA$[_,0V5"$3,7s2CMZgM=1CYsTWhZJ!cM1>#`>l5K7
;/tV0W5Yh;!,g!=*Bj'[[`!5%f@gX>Dk)TJPBQ%N#d"UIrl75/]HO.WfkEYXrZ#Wq
GF(74QOm>FC<?g[T'da2e?#\f%.hE;Otl)f!EbF<<1K+l^V&",maI-05(?!HXO=C!
-%0r<\!>u%r`kfYB(Tp8DrCrfrrDQ'j0.iMj+t',Ln>KjR;Xq<>5(tb_s?#N^6R\b
m8#d_pAESf2>k4#Q9V^OQQ^4o=@%U4>%`;._k.:M"9-O%&cNnt<m1IY"l?eg*EU+@
7Zpqi'%uMNG#jcUBA'!\imp-XXVTb2<N]58`,_a'AX1!QKD%q4?"N&5>K#*b%f@-@
pmYSJVc2/_Ztk"o92ZP2__&IGEuM-cXD`"X<H]niV&7"e9l9bXr%PJI_g%apLE6PU
`3623H*q2PrM&1-U1,gGdkHi4g'g[&q75CfMWY3Y8eHAcS9\Ig3F1D=h/Z-d?*.^5
2^lCQX&A)@Y:f:gaX6E@\^18nh[q\p*;g2NZdSbMia3JIiL)p9[0rT>8#O2*gJ/tb
I#HW.U4t'CN]CTTL)ARA<l5/F+4i"n_Ysbe4:r:LU?MGSOI$,EX(>uc\<O"I;S`@Y
'EBr9$s'KE;LJ&tHbKB(rZkEoKR"fJgXE(Y'N%:b@7:l,!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!
!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!!C[]!#QNH~>

n
Q
Q
Q
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%EOF
